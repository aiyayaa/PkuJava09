class MyStack {
    // Push element x onto stack.
    private Queue<Integer> q1 = new LinkedList<Integer>();
    private Queue<Integer> q2 = new LinkedList<Integer>();
    public void push(int x) {
        q1.offer(x);
    }

    // Removes the element on top of the stack.
    public void pop() {
        while(!q1.isEmpty()){
              int elem=q1.poll();
              if(q1.size()==0) break;
              q2.offer(elem);
        }//end while
        while(!q2.isEmpty()){
              q1.offer(q2.poll());
        }//end while
    }

    // Get the top element.
    public int top() {
        int elem=0;
        while(!q1.isEmpty()){
            elem=q1.poll();
            q2.offer(elem);
        }//end while
        while(!q2.isEmpty()){
            q1.offer(q2.poll());
        }//end while
        return elem;
    }

    // Return whether the stack is empty.
    public boolean empty() {
        return q1.isEmpty()&&q2.isEmpty();
        
    }
}